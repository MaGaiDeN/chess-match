{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\magai\\\\Desktop\\\\chess-match\\\\client\\\\src\\\\components\\\\Chessboard\\\\Chessboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Chessboard } from 'react-chessboard';\nimport { Chess } from 'chess.js';\nimport { loadPuzzlesFromPGN } from '../../services/puzzleService';\nimport './Chessboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessboardComponent = () => {\n  _s();\n  const [position, setPosition] = useState('start');\n  const [currentPuzzle, setCurrentPuzzle] = useState(null);\n  const [solutionIndex, setSolutionIndex] = useState(0);\n  const [isComplete, setIsComplete] = useState(false);\n  const [message, setMessage] = useState('Cargando puzzle...');\n  const gameRef = useRef(new Chess());\n  const loadRandomPuzzle = useCallback(async () => {\n    try {\n      const puzzles = await loadPuzzlesFromPGN();\n      if (puzzles && puzzles.length > 0) {\n        const puzzle = puzzles[0];\n        console.log('Cargando puzzle:', puzzle);\n        console.log('Tipo de FEN:', typeof puzzle.fen);\n        console.log('Longitud del FEN:', puzzle.fen.length);\n        const game = new Chess();\n        console.log('Estado inicial del tablero:', game.fen());\n        const fen = puzzle.fen.trim();\n        console.log('FEN despuÃ©s de trim:', fen);\n        console.log('Caracteres del FEN (ASCII):', Array.from(fen).map(c => `${c}(${c.charCodeAt(0)})`).join(' '));\n        try {\n          // Intentar cargar el FEN directamente\n          const success = game.load(fen);\n          console.log('Resultado de carga:', success);\n          console.log('Estado del tablero despuÃ©s de carga:', game.fen());\n          if (!success) {\n            throw new Error('No se pudo cargar la posiciÃ³n FEN');\n          }\n          gameRef.current = game;\n          setPosition(game.fen());\n          setCurrentPuzzle(puzzle);\n          setSolutionIndex(0);\n          setIsComplete(false);\n          setMessage('Tu turno - Encuentra el mate en dos');\n        } catch (fenError) {\n          console.error('Error detallado:', fenError);\n          throw new Error(`Error al cargar FEN: ${fenError.message}`);\n        }\n      }\n    } catch (error) {\n      console.error('Error cargando puzzle:', error);\n      setMessage('Error al cargar el puzzle');\n    }\n  }, []);\n  useEffect(() => {\n    loadRandomPuzzle();\n  }, [loadRandomPuzzle]);\n  const onDrop = (sourceSquare, targetSquare) => {\n    if (isComplete) return false;\n    try {\n      const move = gameRef.current.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: 'q'\n      });\n      if (!move) return false;\n      const expectedMove = currentPuzzle.solution[solutionIndex].replace('#', '');\n      const actualMove = move.san.replace('#', '');\n      console.log('Movimiento esperado:', expectedMove);\n      console.log('Movimiento realizado:', actualMove);\n      if (actualMove === expectedMove) {\n        setPosition(gameRef.current.fen());\n        if (solutionIndex === currentPuzzle.solution.length - 1) {\n          setIsComplete(true);\n          setMessage('Â¡Excelente! Â¡Has encontrado el mate! ðŸŽ‰');\n          return true;\n        }\n        setMessage('Â¡Correcto! Espera la respuesta...');\n        setTimeout(() => {\n          const opponentMove = currentPuzzle.solution[solutionIndex + 1];\n          if (opponentMove) {\n            gameRef.current.move(opponentMove.replace('#', ''));\n            setPosition(gameRef.current.fen());\n            setSolutionIndex(prev => prev + 2);\n            setMessage('Tu turno - Da mate');\n          }\n        }, 500);\n        return true;\n      }\n      gameRef.current.undo();\n      setMessage('Movimiento incorrecto. Intenta de nuevo');\n      return false;\n    } catch (error) {\n      console.error('Error en movimiento:', error);\n      return false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chessboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n      position: position,\n      onPieceDrop: onDrop,\n      boardOrientation: \"white\",\n      arePremovesAllowed: false,\n      customBoardStyle: {\n        borderRadius: '4px',\n        boxShadow: '0 2px 10px rgba(0, 0, 0, 0.5)'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"puzzle-status\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: isComplete ? 'success-message' : 'message',\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), currentPuzzle && !isComplete && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"move-counter\",\n        children: [\"Movimiento \", Math.floor(solutionIndex / 2) + 1, \" de \", Math.ceil(currentPuzzle.solution.length / 2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessboardComponent, \"uofdS5dXT8xr9BmlqOTSXlDt3rc=\");\n_c = ChessboardComponent;\nexport default ChessboardComponent;\nvar _c;\n$RefreshReg$(_c, \"ChessboardComponent\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Chessboard","Chess","loadPuzzlesFromPGN","jsxDEV","_jsxDEV","ChessboardComponent","_s","position","setPosition","currentPuzzle","setCurrentPuzzle","solutionIndex","setSolutionIndex","isComplete","setIsComplete","message","setMessage","gameRef","loadRandomPuzzle","puzzles","length","puzzle","console","log","fen","game","trim","Array","from","map","c","charCodeAt","join","success","load","Error","current","fenError","error","onDrop","sourceSquare","targetSquare","move","to","promotion","expectedMove","solution","replace","actualMove","san","setTimeout","opponentMove","prev","undo","className","children","onPieceDrop","boardOrientation","arePremovesAllowed","customBoardStyle","borderRadius","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","ceil","_c","$RefreshReg$"],"sources":["C:/Users/magai/Desktop/chess-match/client/src/components/Chessboard/Chessboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Chessboard } from 'react-chessboard';\r\nimport { Chess } from 'chess.js';\r\nimport { loadPuzzlesFromPGN } from '../../services/puzzleService';\r\nimport './Chessboard.css';\r\n\r\nconst ChessboardComponent = () => {\r\n  const [position, setPosition] = useState('start');\r\n  const [currentPuzzle, setCurrentPuzzle] = useState(null);\r\n  const [solutionIndex, setSolutionIndex] = useState(0);\r\n  const [isComplete, setIsComplete] = useState(false);\r\n  const [message, setMessage] = useState('Cargando puzzle...');\r\n  \r\n  const gameRef = useRef(new Chess());\r\n\r\n  const loadRandomPuzzle = useCallback(async () => {\r\n    try {\r\n      const puzzles = await loadPuzzlesFromPGN();\r\n      \r\n      if (puzzles && puzzles.length > 0) {\r\n        const puzzle = puzzles[0];\r\n        console.log('Cargando puzzle:', puzzle);\r\n        console.log('Tipo de FEN:', typeof puzzle.fen);\r\n        console.log('Longitud del FEN:', puzzle.fen.length);\r\n        \r\n        const game = new Chess();\r\n        console.log('Estado inicial del tablero:', game.fen());\r\n        \r\n        const fen = puzzle.fen.trim();\r\n        console.log('FEN despuÃ©s de trim:', fen);\r\n        console.log('Caracteres del FEN (ASCII):', Array.from(fen).map(c => `${c}(${c.charCodeAt(0)})`).join(' '));\r\n        \r\n        try {\r\n          // Intentar cargar el FEN directamente\r\n          const success = game.load(fen);\r\n          console.log('Resultado de carga:', success);\r\n          console.log('Estado del tablero despuÃ©s de carga:', game.fen());\r\n          \r\n          if (!success) {\r\n            throw new Error('No se pudo cargar la posiciÃ³n FEN');\r\n          }\r\n          \r\n          gameRef.current = game;\r\n          setPosition(game.fen());\r\n          setCurrentPuzzle(puzzle);\r\n          setSolutionIndex(0);\r\n          setIsComplete(false);\r\n          setMessage('Tu turno - Encuentra el mate en dos');\r\n          \r\n        } catch (fenError) {\r\n          console.error('Error detallado:', fenError);\r\n          throw new Error(`Error al cargar FEN: ${fenError.message}`);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error cargando puzzle:', error);\r\n      setMessage('Error al cargar el puzzle');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadRandomPuzzle();\r\n  }, [loadRandomPuzzle]);\r\n\r\n  const onDrop = (sourceSquare, targetSquare) => {\r\n    if (isComplete) return false;\r\n\r\n    try {\r\n      const move = gameRef.current.move({\r\n        from: sourceSquare,\r\n        to: targetSquare,\r\n        promotion: 'q'\r\n      });\r\n\r\n      if (!move) return false;\r\n\r\n      const expectedMove = currentPuzzle.solution[solutionIndex].replace('#', '');\r\n      const actualMove = move.san.replace('#', '');\r\n      \r\n      console.log('Movimiento esperado:', expectedMove);\r\n      console.log('Movimiento realizado:', actualMove);\r\n\r\n      if (actualMove === expectedMove) {\r\n        setPosition(gameRef.current.fen());\r\n        \r\n        if (solutionIndex === currentPuzzle.solution.length - 1) {\r\n          setIsComplete(true);\r\n          setMessage('Â¡Excelente! Â¡Has encontrado el mate! ðŸŽ‰');\r\n          return true;\r\n        }\r\n\r\n        setMessage('Â¡Correcto! Espera la respuesta...');\r\n        \r\n        setTimeout(() => {\r\n          const opponentMove = currentPuzzle.solution[solutionIndex + 1];\r\n          if (opponentMove) {\r\n            gameRef.current.move(opponentMove.replace('#', ''));\r\n            setPosition(gameRef.current.fen());\r\n            setSolutionIndex(prev => prev + 2);\r\n            setMessage('Tu turno - Da mate');\r\n          }\r\n        }, 500);\r\n\r\n        return true;\r\n      }\r\n\r\n      gameRef.current.undo();\r\n      setMessage('Movimiento incorrecto. Intenta de nuevo');\r\n      return false;\r\n    } catch (error) {\r\n      console.error('Error en movimiento:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chessboard-container\">\r\n      <Chessboard \r\n        position={position}\r\n        onPieceDrop={onDrop}\r\n        boardOrientation=\"white\"\r\n        arePremovesAllowed={false}\r\n        customBoardStyle={{\r\n          borderRadius: '4px',\r\n          boxShadow: '0 2px 10px rgba(0, 0, 0, 0.5)'\r\n        }}\r\n      />\r\n      <div className=\"puzzle-status\">\r\n        <p className={isComplete ? 'success-message' : 'message'}>\r\n          {message}\r\n        </p>\r\n        {currentPuzzle && !isComplete && (\r\n          <p className=\"move-counter\">\r\n            Movimiento {Math.floor(solutionIndex/2) + 1} de {Math.ceil(currentPuzzle.solution.length/2)}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChessboardComponent; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}