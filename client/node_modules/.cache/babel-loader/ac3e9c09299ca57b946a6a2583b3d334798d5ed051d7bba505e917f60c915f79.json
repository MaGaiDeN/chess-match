{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\magai\\\\Desktop\\\\chess-match\\\\client\\\\src\\\\components\\\\Chessboard\\\\Chessboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Chessboard } from 'react-chessboard';\nimport { Chess } from 'chess.js';\nimport { loadPuzzlesFromPGN } from '../../services/puzzleService';\nimport './Chessboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessboardComponent = () => {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const [currentPuzzle, setCurrentPuzzle] = useState(null);\n  const [solutionIndex, setSolutionIndex] = useState(0);\n  const [isComplete, setIsComplete] = useState(false);\n  const [message, setMessage] = useState('Cargando puzzle...');\n  const [position, setPosition] = useState('start');\n  const gameRef = useRef(null);\n  const loadRandomPuzzle = useCallback(async () => {\n    try {\n      const puzzles = await loadPuzzlesFromPGN();\n      console.log('Puzzles cargados:', puzzles);\n      if (puzzles && puzzles.length > 0) {\n        const puzzle = puzzles[0];\n        console.log('Cargando puzzle:', puzzle);\n        const newGame = new Chess();\n        try {\n          newGame.clear();\n          newGame.load(puzzle.fen);\n          console.log('Posición cargada correctamente:', {\n            fen: newGame.fen(),\n            turno: newGame.turn(),\n            movimientos: puzzle.solution\n          });\n          setGame(newGame);\n          setPosition(newGame.fen());\n          setCurrentPuzzle(puzzle);\n          setSolutionIndex(0);\n          setIsComplete(false);\n          setMessage('Tu turno - Encuentra el mate en dos');\n        } catch (error) {\n          console.error('Error al cargar FEN:', error);\n          setMessage('Error al cargar la posición');\n        }\n      } else {\n        setMessage('No hay puzzles disponibles');\n      }\n    } catch (error) {\n      console.error('Error al cargar puzzle:', error);\n      setMessage('Error al cargar el puzzle');\n    }\n  }, []);\n  useEffect(() => {\n    loadRandomPuzzle();\n  }, []);\n  useEffect(() => {\n    if (game && game.fen()) {\n      setPosition(game.fen());\n    }\n  }, [game]);\n  const onDrop = (sourceSquare, targetSquare) => {\n    if (isComplete) return false;\n    try {\n      const gameCopy = new Chess(game.fen());\n      const move = gameCopy.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: 'q'\n      });\n      if (!move) return false;\n      console.log('Movimiento realizado:', {\n        from: sourceSquare,\n        to: targetSquare,\n        san: move.san,\n        esperado: currentPuzzle.solution[solutionIndex],\n        isCheck: gameCopy.isCheck(),\n        isCheckmate: gameCopy.isCheckmate()\n      });\n      const expectedMove = currentPuzzle.solution[solutionIndex].replace('#', '');\n      const actualMove = move.san.replace('#', '');\n      const isMateMove = currentPuzzle.solution[solutionIndex].includes('#');\n      if (actualMove === expectedMove) {\n        setGame(gameCopy);\n        setPosition(gameCopy.fen());\n        if (isMateMove && gameCopy.isCheckmate()) {\n          setIsComplete(true);\n          setMessage('¡Excelente! ¡Has encontrado el mate! 🎉');\n          return true;\n        } else if (isMateMove && !gameCopy.isCheckmate()) {\n          setMessage('¡El movimiento es correcto pero no es mate!');\n          return false;\n        }\n        setMessage('¡Correcto! Espera la respuesta...');\n        setTimeout(() => {\n          const opponentMove = currentPuzzle.solution[solutionIndex + 1];\n          if (!opponentMove) return;\n          const oppGame = new Chess(gameCopy.fen());\n          const result = oppGame.move(opponentMove.replace('#', ''));\n          if (result) {\n            setGame(oppGame);\n            setPosition(oppGame.fen());\n            setSolutionIndex(prev => prev + 2);\n            setMessage('Tu turno - Da mate');\n          }\n        }, 500);\n        return true;\n      }\n      setMessage('Movimiento incorrecto. Intenta de nuevo');\n      return false;\n    } catch (error) {\n      console.error('Error en movimiento:', error);\n      return false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chessboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n      position: position,\n      onPieceDrop: onDrop,\n      boardOrientation: \"white\",\n      arePremovesAllowed: false,\n      customBoardStyle: {\n        borderRadius: '4px',\n        boxShadow: '0 2px 10px rgba(0, 0, 0, 0.5)'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"puzzle-status\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: isComplete ? 'success-message' : 'message',\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), currentPuzzle && !isComplete && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"move-counter\",\n        children: [\"Movimiento \", Math.floor(solutionIndex / 2) + 1, \" de \", Math.ceil(currentPuzzle.solution.length / 2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessboardComponent, \"+9hfbdMlwfx06vHRm3NpnM45YpI=\");\n_c = ChessboardComponent;\nexport default ChessboardComponent;\nvar _c;\n$RefreshReg$(_c, \"ChessboardComponent\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Chessboard","Chess","loadPuzzlesFromPGN","jsxDEV","_jsxDEV","ChessboardComponent","_s","game","setGame","currentPuzzle","setCurrentPuzzle","solutionIndex","setSolutionIndex","isComplete","setIsComplete","message","setMessage","position","setPosition","gameRef","loadRandomPuzzle","puzzles","console","log","length","puzzle","newGame","clear","load","fen","turno","turn","movimientos","solution","error","onDrop","sourceSquare","targetSquare","gameCopy","move","from","to","promotion","san","esperado","isCheck","isCheckmate","expectedMove","replace","actualMove","isMateMove","includes","setTimeout","opponentMove","oppGame","result","prev","className","children","onPieceDrop","boardOrientation","arePremovesAllowed","customBoardStyle","borderRadius","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","ceil","_c","$RefreshReg$"],"sources":["C:/Users/magai/Desktop/chess-match/client/src/components/Chessboard/Chessboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Chessboard } from 'react-chessboard';\r\nimport { Chess } from 'chess.js';\r\nimport { loadPuzzlesFromPGN } from '../../services/puzzleService';\r\nimport './Chessboard.css';\r\n\r\nconst ChessboardComponent = () => {\r\n  const [game, setGame] = useState(new Chess());\r\n  const [currentPuzzle, setCurrentPuzzle] = useState(null);\r\n  const [solutionIndex, setSolutionIndex] = useState(0);\r\n  const [isComplete, setIsComplete] = useState(false);\r\n  const [message, setMessage] = useState('Cargando puzzle...');\r\n  const [position, setPosition] = useState('start');\r\n\r\n  const gameRef = useRef(null);\r\n\r\n  const loadRandomPuzzle = useCallback(async () => {\r\n    try {\r\n      const puzzles = await loadPuzzlesFromPGN();\r\n      console.log('Puzzles cargados:', puzzles);\r\n      \r\n      if (puzzles && puzzles.length > 0) {\r\n        const puzzle = puzzles[0];\r\n        console.log('Cargando puzzle:', puzzle);\r\n        \r\n        const newGame = new Chess();\r\n        try {\r\n          newGame.clear();\r\n          \r\n          newGame.load(puzzle.fen);\r\n          \r\n          console.log('Posición cargada correctamente:', {\r\n            fen: newGame.fen(),\r\n            turno: newGame.turn(),\r\n            movimientos: puzzle.solution\r\n          });\r\n          \r\n          setGame(newGame);\r\n          setPosition(newGame.fen());\r\n          setCurrentPuzzle(puzzle);\r\n          setSolutionIndex(0);\r\n          setIsComplete(false);\r\n          setMessage('Tu turno - Encuentra el mate en dos');\r\n        } catch (error) {\r\n          console.error('Error al cargar FEN:', error);\r\n          setMessage('Error al cargar la posición');\r\n        }\r\n      } else {\r\n        setMessage('No hay puzzles disponibles');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al cargar puzzle:', error);\r\n      setMessage('Error al cargar el puzzle');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadRandomPuzzle();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (game && game.fen()) {\r\n      setPosition(game.fen());\r\n    }\r\n  }, [game]);\r\n\r\n  const onDrop = (sourceSquare, targetSquare) => {\r\n    if (isComplete) return false;\r\n\r\n    try {\r\n      const gameCopy = new Chess(game.fen());\r\n      const move = gameCopy.move({\r\n        from: sourceSquare,\r\n        to: targetSquare,\r\n        promotion: 'q'\r\n      });\r\n\r\n      if (!move) return false;\r\n\r\n      console.log('Movimiento realizado:', {\r\n        from: sourceSquare,\r\n        to: targetSquare,\r\n        san: move.san,\r\n        esperado: currentPuzzle.solution[solutionIndex],\r\n        isCheck: gameCopy.isCheck(),\r\n        isCheckmate: gameCopy.isCheckmate()\r\n      });\r\n\r\n      const expectedMove = currentPuzzle.solution[solutionIndex].replace('#', '');\r\n      const actualMove = move.san.replace('#', '');\r\n      const isMateMove = currentPuzzle.solution[solutionIndex].includes('#');\r\n\r\n      if (actualMove === expectedMove) {\r\n        setGame(gameCopy);\r\n        setPosition(gameCopy.fen());\r\n        \r\n        if (isMateMove && gameCopy.isCheckmate()) {\r\n          setIsComplete(true);\r\n          setMessage('¡Excelente! ¡Has encontrado el mate! 🎉');\r\n          return true;\r\n        } else if (isMateMove && !gameCopy.isCheckmate()) {\r\n          setMessage('¡El movimiento es correcto pero no es mate!');\r\n          return false;\r\n        }\r\n\r\n        setMessage('¡Correcto! Espera la respuesta...');\r\n        \r\n        setTimeout(() => {\r\n          const opponentMove = currentPuzzle.solution[solutionIndex + 1];\r\n          if (!opponentMove) return;\r\n\r\n          const oppGame = new Chess(gameCopy.fen());\r\n          const result = oppGame.move(opponentMove.replace('#', ''));\r\n\r\n          if (result) {\r\n            setGame(oppGame);\r\n            setPosition(oppGame.fen());\r\n            setSolutionIndex(prev => prev + 2);\r\n            setMessage('Tu turno - Da mate');\r\n          }\r\n        }, 500);\r\n\r\n        return true;\r\n      }\r\n\r\n      setMessage('Movimiento incorrecto. Intenta de nuevo');\r\n      return false;\r\n\r\n    } catch (error) {\r\n      console.error('Error en movimiento:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chessboard-container\">\r\n      <Chessboard \r\n        position={position}\r\n        onPieceDrop={onDrop}\r\n        boardOrientation=\"white\"\r\n        arePremovesAllowed={false}\r\n        customBoardStyle={{\r\n          borderRadius: '4px',\r\n          boxShadow: '0 2px 10px rgba(0, 0, 0, 0.5)'\r\n        }}\r\n      />\r\n      <div className=\"puzzle-status\">\r\n        <p className={isComplete ? 'success-message' : 'message'}>\r\n          {message}\r\n        </p>\r\n        {currentPuzzle && !isComplete && (\r\n          <p className=\"move-counter\">\r\n            Movimiento {Math.floor(solutionIndex/2) + 1} de {Math.ceil(currentPuzzle.solution.length/2)}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChessboardComponent; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}