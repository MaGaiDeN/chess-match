{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\magai\\\\Desktop\\\\chess-match\\\\client\\\\src\\\\components\\\\Chessboard\\\\Chessboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chessboard } from 'react-chessboard';\nimport { Chess } from 'chess.js';\nimport { loadPuzzlesFromPGN } from '../../services/puzzleService';\nimport './Chessboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessboardComponent = () => {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const [currentPuzzle, setCurrentPuzzle] = useState(null);\n  const [solutionIndex, setSolutionIndex] = useState(0);\n  const [isComplete, setIsComplete] = useState(false);\n  const [message, setMessage] = useState('Cargando puzzle...');\n  const loadRandomPuzzle = async () => {\n    try {\n      const puzzles = await loadPuzzlesFromPGN();\n      const puzzle = puzzles[0]; // Por ahora usamos el primer puzzle\n\n      if (puzzle && puzzle.fen) {\n        console.log('Cargando puzzle:', puzzle);\n\n        // Crear nueva instancia de Chess\n        const newGame = new Chess();\n\n        // Intentar cargar el FEN\n        try {\n          const isValid = newGame.load(puzzle.fen);\n          console.log('Carga de FEN:', {\n            fen: puzzle.fen,\n            isValid,\n            posiciÃ³n: newGame.fen()\n          });\n          if (!isValid) {\n            throw new Error('FEN invÃ¡lido');\n          }\n          setGame(newGame);\n          setCurrentPuzzle(puzzle);\n          setSolutionIndex(0);\n          setIsComplete(false);\n          setMessage('Tu turno - Encuentra el mate en dos');\n        } catch (fenError) {\n          console.error('Error al cargar FEN:', fenError);\n          setMessage('Error al cargar la posiciÃ³n');\n        }\n      } else {\n        console.error('Puzzle invÃ¡lido:', puzzle);\n        setMessage('Error al cargar el puzzle');\n      }\n    } catch (error) {\n      console.error('Error general:', error);\n      setMessage('Error al cargar el puzzle');\n    }\n  };\n  useEffect(() => {\n    loadRandomPuzzle();\n  }, []);\n  const onDrop = (sourceSquare, targetSquare) => {\n    if (isComplete) return false;\n    try {\n      const gameCopy = new Chess(game.fen());\n      const move = gameCopy.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: 'q'\n      });\n      if (!move) return false;\n      console.log('Movimiento realizado:', {\n        from: sourceSquare,\n        to: targetSquare,\n        san: move.san,\n        esperado: currentPuzzle.solution[solutionIndex]\n      });\n\n      // Comparar sin el sÃ­mbolo de mate\n      const expectedMove = currentPuzzle.solution[solutionIndex].replace('#', '');\n      const isMateMove = currentPuzzle.solution[solutionIndex].includes('#');\n      if (move.san === expectedMove) {\n        setGame(gameCopy);\n        if (isMateMove) {\n          setIsComplete(true);\n          setMessage('Â¡Excelente! Â¡Has encontrado el mate! ðŸŽ‰');\n          setTimeout(loadRandomPuzzle, 2000);\n          return true;\n        }\n        setMessage('Â¡Correcto! Espera la respuesta...');\n        setTimeout(() => {\n          const opponentMove = currentPuzzle.solution[solutionIndex + 1];\n          if (!opponentMove) return;\n          const oppGame = new Chess(gameCopy.fen());\n          const result = oppGame.move(opponentMove.replace('#', ''));\n          if (result) {\n            setGame(oppGame);\n            setSolutionIndex(prev => prev + 2);\n            setMessage('Tu turno - Da mate');\n          }\n        }, 500);\n        return true;\n      }\n      setMessage('Movimiento incorrecto. Intenta de nuevo');\n      return false;\n    } catch (error) {\n      console.error('Error en movimiento:', error);\n      return false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chessboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n      position: game.fen(),\n      onPieceDrop: onDrop,\n      boardOrientation: \"white\",\n      arePremovesAllowed: false,\n      customBoardStyle: {\n        borderRadius: '4px',\n        boxShadow: '0 2px 10px rgba(0, 0, 0, 0.5)'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: isComplete ? 'success-message' : '',\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), currentPuzzle && !isComplete && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"move-counter\",\n        children: [\"Movimiento \", Math.floor(solutionIndex / 2) + 1, \" de \", Math.ceil(currentPuzzle.solution.length / 2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessboardComponent, \"biwNQEnwZ450SIfcLAvhhal2UD0=\");\n_c = ChessboardComponent;\nexport default ChessboardComponent;\nvar _c;\n$RefreshReg$(_c, \"ChessboardComponent\");","map":{"version":3,"names":["React","useState","useEffect","Chessboard","Chess","loadPuzzlesFromPGN","jsxDEV","_jsxDEV","ChessboardComponent","_s","game","setGame","currentPuzzle","setCurrentPuzzle","solutionIndex","setSolutionIndex","isComplete","setIsComplete","message","setMessage","loadRandomPuzzle","puzzles","puzzle","fen","console","log","newGame","isValid","load","posiciÃ³n","Error","fenError","error","onDrop","sourceSquare","targetSquare","gameCopy","move","from","to","promotion","san","esperado","solution","expectedMove","replace","isMateMove","includes","setTimeout","opponentMove","oppGame","result","prev","className","children","position","onPieceDrop","boardOrientation","arePremovesAllowed","customBoardStyle","borderRadius","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","ceil","length","_c","$RefreshReg$"],"sources":["C:/Users/magai/Desktop/chess-match/client/src/components/Chessboard/Chessboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Chessboard } from 'react-chessboard';\r\nimport { Chess } from 'chess.js';\r\nimport { loadPuzzlesFromPGN } from '../../services/puzzleService';\r\nimport './Chessboard.css';\r\n\r\nconst ChessboardComponent = () => {\r\n  const [game, setGame] = useState(new Chess());\r\n  const [currentPuzzle, setCurrentPuzzle] = useState(null);\r\n  const [solutionIndex, setSolutionIndex] = useState(0);\r\n  const [isComplete, setIsComplete] = useState(false);\r\n  const [message, setMessage] = useState('Cargando puzzle...');\r\n\r\n  const loadRandomPuzzle = async () => {\r\n    try {\r\n      const puzzles = await loadPuzzlesFromPGN();\r\n      const puzzle = puzzles[0]; // Por ahora usamos el primer puzzle\r\n      \r\n      if (puzzle && puzzle.fen) {\r\n        console.log('Cargando puzzle:', puzzle);\r\n        \r\n        // Crear nueva instancia de Chess\r\n        const newGame = new Chess();\r\n        \r\n        // Intentar cargar el FEN\r\n        try {\r\n          const isValid = newGame.load(puzzle.fen);\r\n          console.log('Carga de FEN:', {\r\n            fen: puzzle.fen,\r\n            isValid,\r\n            posiciÃ³n: newGame.fen()\r\n          });\r\n          \r\n          if (!isValid) {\r\n            throw new Error('FEN invÃ¡lido');\r\n          }\r\n          \r\n          setGame(newGame);\r\n          setCurrentPuzzle(puzzle);\r\n          setSolutionIndex(0);\r\n          setIsComplete(false);\r\n          setMessage('Tu turno - Encuentra el mate en dos');\r\n          \r\n        } catch (fenError) {\r\n          console.error('Error al cargar FEN:', fenError);\r\n          setMessage('Error al cargar la posiciÃ³n');\r\n        }\r\n      } else {\r\n        console.error('Puzzle invÃ¡lido:', puzzle);\r\n        setMessage('Error al cargar el puzzle');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error general:', error);\r\n      setMessage('Error al cargar el puzzle');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadRandomPuzzle();\r\n  }, []);\r\n\r\n  const onDrop = (sourceSquare, targetSquare) => {\r\n    if (isComplete) return false;\r\n\r\n    try {\r\n      const gameCopy = new Chess(game.fen());\r\n      const move = gameCopy.move({\r\n        from: sourceSquare,\r\n        to: targetSquare,\r\n        promotion: 'q'\r\n      });\r\n\r\n      if (!move) return false;\r\n\r\n      console.log('Movimiento realizado:', {\r\n        from: sourceSquare,\r\n        to: targetSquare,\r\n        san: move.san,\r\n        esperado: currentPuzzle.solution[solutionIndex]\r\n      });\r\n\r\n      // Comparar sin el sÃ­mbolo de mate\r\n      const expectedMove = currentPuzzle.solution[solutionIndex].replace('#', '');\r\n      const isMateMove = currentPuzzle.solution[solutionIndex].includes('#');\r\n\r\n      if (move.san === expectedMove) {\r\n        setGame(gameCopy);\r\n        \r\n        if (isMateMove) {\r\n          setIsComplete(true);\r\n          setMessage('Â¡Excelente! Â¡Has encontrado el mate! ðŸŽ‰');\r\n          setTimeout(loadRandomPuzzle, 2000);\r\n          return true;\r\n        }\r\n\r\n        setMessage('Â¡Correcto! Espera la respuesta...');\r\n        \r\n        setTimeout(() => {\r\n          const opponentMove = currentPuzzle.solution[solutionIndex + 1];\r\n          if (!opponentMove) return;\r\n\r\n          const oppGame = new Chess(gameCopy.fen());\r\n          const result = oppGame.move(opponentMove.replace('#', ''));\r\n\r\n          if (result) {\r\n            setGame(oppGame);\r\n            setSolutionIndex(prev => prev + 2);\r\n            setMessage('Tu turno - Da mate');\r\n          }\r\n        }, 500);\r\n\r\n        return true;\r\n      }\r\n\r\n      setMessage('Movimiento incorrecto. Intenta de nuevo');\r\n      return false;\r\n\r\n    } catch (error) {\r\n      console.error('Error en movimiento:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chessboard-container\">\r\n      <Chessboard \r\n        position={game.fen()}\r\n        onPieceDrop={onDrop}\r\n        boardOrientation=\"white\"\r\n        arePremovesAllowed={false}\r\n        customBoardStyle={{\r\n          borderRadius: '4px',\r\n          boxShadow: '0 2px 10px rgba(0, 0, 0, 0.5)'\r\n        }}\r\n      />\r\n      <div className=\"message-container\">\r\n        <p className={isComplete ? 'success-message' : ''}>\r\n          {message}\r\n        </p>\r\n        {currentPuzzle && !isComplete && (\r\n          <p className=\"move-counter\">\r\n            Movimiento {Math.floor(solutionIndex/2) + 1} de {Math.ceil(currentPuzzle.solution.length/2)}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChessboardComponent; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}