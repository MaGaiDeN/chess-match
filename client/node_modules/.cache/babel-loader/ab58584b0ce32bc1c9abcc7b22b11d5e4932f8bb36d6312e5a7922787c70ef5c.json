{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\magai\\\\Desktop\\\\chess-match\\\\client\\\\src\\\\components\\\\Chessboard\\\\Chessboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chessboard } from 'react-chessboard';\nimport { Chess } from 'chess.js';\nimport { loadPuzzles, getRandomPuzzle } from '../../services/puzzleService';\nimport './Chessboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessboardComponent = ({\n  onPuzzleMessage\n}) => {\n  _s();\n  const [game] = useState(() => new Chess());\n  const [currentPuzzle, setCurrentPuzzle] = useState(null);\n  const [position, setPosition] = useState(game.fen());\n  useEffect(() => {\n    const loadRandomPuzzle = async () => {\n      try {\n        const puzzles = await loadPuzzles();\n        if (puzzles && puzzles.length > 0) {\n          const puzzle = getRandomPuzzle(puzzles);\n          if (!puzzle) {\n            console.error('No se pudo cargar el puzzle');\n            return;\n          }\n          const puzzleGame = new Chess();\n          const success = puzzleGame.load(puzzle.fen);\n          console.log('Cargando FEN:', puzzle.fen, 'Resultado:', success);\n          if (success) {\n            setPosition(puzzleGame.fen());\n            setCurrentPuzzle(puzzle);\n            const movesForMate = Math.ceil(puzzle.solution.length / 2);\n            onPuzzleMessage(`${puzzle.turnToPlay === 'w' ? 'Blancas' : 'Negras'} juegan - Mate en ${movesForMate}`);\n          }\n        }\n      } catch (error) {\n        console.error('Error al cargar el puzzle:', error);\n      }\n    };\n    loadRandomPuzzle();\n  }, [onPuzzleMessage]);\n  const onDrop = (sourceSquare, targetSquare) => {\n    try {\n      const move = game.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: 'q'\n      });\n      if (move === null) return false;\n      setPosition(game.fen());\n      return true;\n    } catch (error) {\n      console.error('Error al mover:', error);\n      return false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chessboard-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Chessboard, {\n        position: position,\n        onPieceDrop: onDrop,\n        boardWidth: 400,\n        customDragLayer: false,\n        boardOrientation: (currentPuzzle === null || currentPuzzle === void 0 ? void 0 : currentPuzzle.turnToPlay) === 'b' ? 'black' : 'white'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessboardComponent, \"NMKP7PP+qC3jpvUbiSE//PmymQA=\");\n_c = ChessboardComponent;\nexport default ChessboardComponent;\nvar _c;\n$RefreshReg$(_c, \"ChessboardComponent\");","map":{"version":3,"names":["React","useState","useEffect","Chessboard","Chess","loadPuzzles","getRandomPuzzle","jsxDEV","_jsxDEV","ChessboardComponent","onPuzzleMessage","_s","game","currentPuzzle","setCurrentPuzzle","position","setPosition","fen","loadRandomPuzzle","puzzles","length","puzzle","console","error","puzzleGame","success","load","log","movesForMate","Math","ceil","solution","turnToPlay","onDrop","sourceSquare","targetSquare","move","from","to","promotion","className","children","onPieceDrop","boardWidth","customDragLayer","boardOrientation","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/magai/Desktop/chess-match/client/src/components/Chessboard/Chessboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Chessboard } from 'react-chessboard';\r\nimport { Chess } from 'chess.js';\r\nimport { loadPuzzles, getRandomPuzzle } from '../../services/puzzleService';\r\nimport './Chessboard.css';\r\n\r\nconst ChessboardComponent = ({ onPuzzleMessage }) => {\r\n  const [game] = useState(() => new Chess());\r\n  const [currentPuzzle, setCurrentPuzzle] = useState(null);\r\n  const [position, setPosition] = useState(game.fen());\r\n\r\n  useEffect(() => {\r\n    const loadRandomPuzzle = async () => {\r\n      try {\r\n        const puzzles = await loadPuzzles();\r\n        if (puzzles && puzzles.length > 0) {\r\n          const puzzle = getRandomPuzzle(puzzles);\r\n          if (!puzzle) {\r\n            console.error('No se pudo cargar el puzzle');\r\n            return;\r\n          }\r\n          \r\n          const puzzleGame = new Chess();\r\n          const success = puzzleGame.load(puzzle.fen);\r\n          console.log('Cargando FEN:', puzzle.fen, 'Resultado:', success);\r\n          \r\n          if (success) {\r\n            setPosition(puzzleGame.fen());\r\n            setCurrentPuzzle(puzzle);\r\n            \r\n            const movesForMate = Math.ceil(puzzle.solution.length / 2);\r\n            onPuzzleMessage(`${puzzle.turnToPlay === 'w' ? 'Blancas' : 'Negras'} juegan - Mate en ${movesForMate}`);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al cargar el puzzle:', error);\r\n      }\r\n    };\r\n\r\n    loadRandomPuzzle();\r\n  }, [onPuzzleMessage]);\r\n\r\n  const onDrop = (sourceSquare, targetSquare) => {\r\n    try {\r\n      const move = game.move({\r\n        from: sourceSquare,\r\n        to: targetSquare,\r\n        promotion: 'q'\r\n      });\r\n\r\n      if (move === null) return false;\r\n      \r\n      setPosition(game.fen());\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error al mover:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chessboard-container\">\r\n      <div className=\"board-wrapper\">\r\n        <Chessboard \r\n          position={position}\r\n          onPieceDrop={onDrop}\r\n          boardWidth={400}\r\n          customDragLayer={false}\r\n          boardOrientation={currentPuzzle?.turnToPlay === 'b' ? 'black' : 'white'}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChessboardComponent; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}