{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\magai\\\\Desktop\\\\chess-match\\\\client\\\\src\\\\components\\\\Chessboard\\\\Chessboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Chessboard } from 'react-chessboard';\nimport { Chess } from 'chess.js';\nimport { loadPuzzlesFromPGN } from '../../services/puzzleService';\nimport './Chessboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessboardComponent = () => {\n  _s();\n  const initialPositionRef = useRef(null);\n  const [position, setPosition] = useState(null);\n  const [currentPuzzle, setCurrentPuzzle] = useState(null);\n  const [solutionIndex, setSolutionIndex] = useState(0);\n  const [isComplete, setIsComplete] = useState(false);\n  const [message, setMessage] = useState('Cargando puzzle...');\n  const gameRef = useRef(new Chess());\n  const loadRandomPuzzle = useCallback(async () => {\n    try {\n      const puzzles = await loadPuzzlesFromPGN();\n      if (puzzles && puzzles.length > 0) {\n        const randomIndex = Math.floor(Math.random() * puzzles.length);\n        const puzzle = puzzles[randomIndex];\n        console.log(`Cargando puzzle ${randomIndex + 1} de ${puzzles.length}:`, puzzle);\n        const game = new Chess();\n        const fen = puzzle.fen.trim();\n        console.log('FEN a cargar:', fen);\n        game.load(fen);\n        const resultingFen = game.fen();\n        console.log('FEN cargado:', resultingFen);\n        gameRef.current = game;\n        initialPositionRef.current = resultingFen;\n        setPosition(resultingFen);\n        console.log('Nueva posición establecida:', resultingFen);\n        setCurrentPuzzle(puzzle);\n        setSolutionIndex(0);\n        setIsComplete(false);\n        setMessage(`Juegan ${gameRef.current.turn() === 'w' ? 'Blancas' : 'Negras'}`);\n      }\n    } catch (error) {\n      console.error('Error cargando puzzle:', error);\n      setMessage('Error al cargar el puzzle');\n    }\n  }, []);\n  useEffect(() => {\n    loadRandomPuzzle();\n  }, [loadRandomPuzzle]);\n  useEffect(() => {\n    if (position === null && initialPositionRef.current) {\n      console.log('Restaurando posición inicial:', initialPositionRef.current);\n      setPosition(initialPositionRef.current);\n    }\n  }, [position]);\n  if (!position) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this);\n  }\n  const onDrop = (sourceSquare, targetSquare) => {\n    if (isComplete) return false;\n    try {\n      const move = gameRef.current.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: 'q'\n      });\n      if (!move) return false;\n      const expectedMove = currentPuzzle.solution[solutionIndex].replace('#', '');\n      const actualMove = move.san.replace('#', '');\n      console.log('Movimiento esperado:', expectedMove);\n      console.log('Movimiento realizado:', actualMove);\n      if (actualMove === expectedMove) {\n        setPosition(gameRef.current.fen());\n        if (solutionIndex === currentPuzzle.solution.length - 1) {\n          setIsComplete(true);\n          setMessage('¡Excelente! ¡Has encontrado el mate! 🎉');\n          return true;\n        }\n        setMessage('¡Correcto! Espera la respuesta...');\n        setTimeout(() => {\n          const opponentMove = currentPuzzle.solution[solutionIndex + 1];\n          if (opponentMove) {\n            gameRef.current.move(opponentMove.replace('#', ''));\n            setPosition(gameRef.current.fen());\n            setSolutionIndex(prev => prev + 2);\n            setMessage('Tu turno - Da mate');\n          }\n        }, 500);\n        return true;\n      }\n      gameRef.current.undo();\n      setMessage('Movimiento incorrecto. Intenta de nuevo');\n      return false;\n    } catch (error) {\n      console.error('Error en movimiento:', error);\n      return false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chessboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n      position: position,\n      onPieceDrop: onDrop,\n      boardOrientation: \"white\",\n      arePremovesAllowed: false,\n      customBoardStyle: {\n        borderRadius: '4px',\n        boxShadow: '0 2px 10px rgba(0, 0, 0, 0.5)'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"puzzle-status\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: isComplete ? 'success-message' : 'message',\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), currentPuzzle && !isComplete && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"move-counter\",\n        children: \"Mate en 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), isComplete && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-puzzle-button\",\n        onClick: loadRandomPuzzle,\n        children: \"Siguiente puzzle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessboardComponent, \"Lm6N9jYHpVfGRgx6CwUUwmkUGs8=\");\n_c = ChessboardComponent;\nexport default ChessboardComponent;\nvar _c;\n$RefreshReg$(_c, \"ChessboardComponent\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Chessboard","Chess","loadPuzzlesFromPGN","jsxDEV","_jsxDEV","ChessboardComponent","_s","initialPositionRef","position","setPosition","currentPuzzle","setCurrentPuzzle","solutionIndex","setSolutionIndex","isComplete","setIsComplete","message","setMessage","gameRef","loadRandomPuzzle","puzzles","length","randomIndex","Math","floor","random","puzzle","console","log","game","fen","trim","load","resultingFen","current","turn","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","sourceSquare","targetSquare","move","from","to","promotion","expectedMove","solution","replace","actualMove","san","setTimeout","opponentMove","prev","undo","className","onPieceDrop","boardOrientation","arePremovesAllowed","customBoardStyle","borderRadius","boxShadow","onClick","_c","$RefreshReg$"],"sources":["C:/Users/magai/Desktop/chess-match/client/src/components/Chessboard/Chessboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Chessboard } from 'react-chessboard';\r\nimport { Chess } from 'chess.js';\r\nimport { loadPuzzlesFromPGN } from '../../services/puzzleService';\r\nimport './Chessboard.css';\r\n\r\nconst ChessboardComponent = () => {\r\n  const initialPositionRef = useRef(null);\r\n  const [position, setPosition] = useState(null);\r\n  const [currentPuzzle, setCurrentPuzzle] = useState(null);\r\n  const [solutionIndex, setSolutionIndex] = useState(0);\r\n  const [isComplete, setIsComplete] = useState(false);\r\n  const [message, setMessage] = useState('Cargando puzzle...');\r\n  \r\n  const gameRef = useRef(new Chess());\r\n\r\n  const loadRandomPuzzle = useCallback(async () => {\r\n    try {\r\n      const puzzles = await loadPuzzlesFromPGN();\r\n      \r\n      if (puzzles && puzzles.length > 0) {\r\n        const randomIndex = Math.floor(Math.random() * puzzles.length);\r\n        const puzzle = puzzles[randomIndex];\r\n        console.log(`Cargando puzzle ${randomIndex + 1} de ${puzzles.length}:`, puzzle);\r\n        \r\n        const game = new Chess();\r\n        const fen = puzzle.fen.trim();\r\n        console.log('FEN a cargar:', fen);\r\n        \r\n        game.load(fen);\r\n        const resultingFen = game.fen();\r\n        console.log('FEN cargado:', resultingFen);\r\n        \r\n        gameRef.current = game;\r\n        initialPositionRef.current = resultingFen;\r\n        setPosition(resultingFen);\r\n        console.log('Nueva posición establecida:', resultingFen);\r\n        \r\n        setCurrentPuzzle(puzzle);\r\n        setSolutionIndex(0);\r\n        setIsComplete(false);\r\n        setMessage(`Juegan ${gameRef.current.turn() === 'w' ? 'Blancas' : 'Negras'}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error cargando puzzle:', error);\r\n      setMessage('Error al cargar el puzzle');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadRandomPuzzle();\r\n  }, [loadRandomPuzzle]);\r\n\r\n  useEffect(() => {\r\n    if (position === null && initialPositionRef.current) {\r\n      console.log('Restaurando posición inicial:', initialPositionRef.current);\r\n      setPosition(initialPositionRef.current);\r\n    }\r\n  }, [position]);\r\n\r\n  if (!position) {\r\n    return <div>Cargando...</div>;\r\n  }\r\n\r\n  const onDrop = (sourceSquare, targetSquare) => {\r\n    if (isComplete) return false;\r\n\r\n    try {\r\n      const move = gameRef.current.move({\r\n        from: sourceSquare,\r\n        to: targetSquare,\r\n        promotion: 'q'\r\n      });\r\n\r\n      if (!move) return false;\r\n\r\n      const expectedMove = currentPuzzle.solution[solutionIndex].replace('#', '');\r\n      const actualMove = move.san.replace('#', '');\r\n      \r\n      console.log('Movimiento esperado:', expectedMove);\r\n      console.log('Movimiento realizado:', actualMove);\r\n\r\n      if (actualMove === expectedMove) {\r\n        setPosition(gameRef.current.fen());\r\n        \r\n        if (solutionIndex === currentPuzzle.solution.length - 1) {\r\n          setIsComplete(true);\r\n          setMessage('¡Excelente! ¡Has encontrado el mate! 🎉');\r\n          return true;\r\n        }\r\n\r\n        setMessage('¡Correcto! Espera la respuesta...');\r\n        \r\n        setTimeout(() => {\r\n          const opponentMove = currentPuzzle.solution[solutionIndex + 1];\r\n          if (opponentMove) {\r\n            gameRef.current.move(opponentMove.replace('#', ''));\r\n            setPosition(gameRef.current.fen());\r\n            setSolutionIndex(prev => prev + 2);\r\n            setMessage('Tu turno - Da mate');\r\n          }\r\n        }, 500);\r\n\r\n        return true;\r\n      }\r\n\r\n      gameRef.current.undo();\r\n      setMessage('Movimiento incorrecto. Intenta de nuevo');\r\n      return false;\r\n    } catch (error) {\r\n      console.error('Error en movimiento:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chessboard-container\">\r\n      <Chessboard \r\n        position={position}\r\n        onPieceDrop={onDrop}\r\n        boardOrientation=\"white\"\r\n        arePremovesAllowed={false}\r\n        customBoardStyle={{\r\n          borderRadius: '4px',\r\n          boxShadow: '0 2px 10px rgba(0, 0, 0, 0.5)'\r\n        }}\r\n      />\r\n      <div className=\"puzzle-status\">\r\n        <p className={isComplete ? 'success-message' : 'message'}>\r\n          {message}\r\n        </p>\r\n        {currentPuzzle && !isComplete && (\r\n          <p className=\"move-counter\">\r\n            Mate en 2\r\n          </p>\r\n        )}\r\n        {isComplete && (\r\n          <button \r\n            className=\"next-puzzle-button\"\r\n            onClick={loadRandomPuzzle}\r\n          >\r\n            Siguiente puzzle\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChessboardComponent; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}